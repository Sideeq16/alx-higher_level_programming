The ``BaseGeometry`` module
===========================

Using ``integer_validator``
---------------------------

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

# Initialize Class
	>>> bg = BaseGeometry()

# MY Test for correct output (nothing)
	>>> bg.integer_validator("my_int", 12)

# MY Test with string
	>>> bg.integer_validator("name", "Penguin")
	Traceback (most recent call last):
		...
	TypeError: name must be an integer

# MY Test with 0
	>>> bg.integer_validator("something", 0)
	Traceback (most recent call last):
		...
	ValueError: something must be greater than 0

# MY Test with negative number
	>>> bg.integer_validator("This", -5)
	Traceback (most recent call last):
		...
	ValueError: This must be greater than 0

# MY Test with float
	>>> bg.integer_validator("This", -5.5)
	Traceback (most recent call last):
		...
	TypeError: This must be an integer

# MY Test area
	>>> bg.area()
	Traceback (most recent call last):
		...
	Exception: area() is not implemented

# MY Test integer_validator with no arguments
	>>> bg.integer_validator()
	Traceback (most recent call last):
		...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

# MY Test integer_validator with 1 argument
	>>> bg.integer_validator("age")
	Traceback (most recent call last):
		...
	TypeError: integer_validator() missing 1 required positional argument: 'value'

# MY Test with Tuple as second argument
	>>> bg.integer_validator("age", (4,))
	Traceback (most recent call last):
		...
	TypeError: age must be an integer

# MY Test with list as second argument
	>>> bg.integer_validator("age", [3])
	Traceback (most recent call last):
		...
	TypeError: age must be an integer

# MY Test with boolean as second argument
	>>> bg.integer_validator("age", True)
	Traceback (most recent call last):
		...
	TypeError: age must be an integer

# MY Test with dict as second argument
	>>> bg.integer_validator("age", {3, 4})
	Traceback (most recent call last):
		...
	TypeError: age must be an integer

# MY Test with None as second argument
	>>> bg.integer_validator("age", None)
	Traceback (most recent call last):
		...
	TypeError: age must be an integer
